package nanobotsreplay;

option java_package = "replay";
option java_outer_classname = "ReplayProto";

message Replay {
	message Team {
		required string name = 1;
		required uint32 tid = 2;
	}
	message Entity {
		enum Type {
			BOT = 0;
			FOOD = 1;
			WALL = 2;
		}
		message ReceivedMessage {
			required uint32 body = 1;
			required Point origin = 2;
		}
		enum BotState {
			NORMAL = 0;
			GESTATING = 1;
		}
	
		required Point pos = 1;
		required Type type = 2;
		required uint32 eid = 3;
		
		// food/bot
		optional uint32 energy = 4;
		
		// bot
		repeated ReceivedMessage inbox = 5;
		optional uint32 memory = 6;
		optional uint32 tid = 7;
		optional Action running_action = 8;
		optional BotState bot_state = 9;
		optional uint32 elapsed_gestation = 10;
	}
	message TurnInfo {
		repeated Entity ents = 2;
	}
	message Action {
		enum Type {
			ALL = 0;
			ATTACK = 1;
			HARVEST = 2;
			MOVE = 3;
			CONCEIVE = 4;
			BIRTH = 5;
			TRANSFER = 6;
			BROADCAST = 7;
			WAIT = 8;
		}
		enum Outcome {
			SUCCESS = 0;
			ILLEGAL_TARGET = 1;
			INSUFFICIENT_ENERGY = 2;
			WRONG_BOT_STATE = 3;
			COOLDOWN_NOT_ELAPSED = 4;
			GESTATION_NOT_COMPLETE = 5;
		}
		required Type type = 1;
		required Outcome outcome = 2;
		optional Point target = 3;
		optional uint32 broadcast_message = 4;
		optional uint32 transfer_amount = 5;
		optional uint32 newborn_memory = 6;
	}
	
	required Dimension map_size = 1;
	repeated Team teams = 2;
	repeated TurnInfo turns = 3;
	optional uint32 winning_team = 4;
}

message Settings {
	optional uint32 bot_birth_energy = 1;
	optional uint32 bot_max_energy = 2;
	optional uint32 bot_vision_range = 3;
	optional uint32 bot_memory_length = 4;
	optional uint32 bot_message_length = 5;
	optional double bot_overcharge_drain = 6;
	
	optional uint32 food_birth_energy = 101;
	
	repeated ActionSettings actions = 200; //action order is execution order
	optional uint32 attack_damage = 201;
	optional uint32 harvest_amount = 202;
	
	message ActionSettings {
		enum Type {
			ATTACK = 0;
			MOVE = 1;
			HARVEST = 2;
			REPRODUCE = 3;
			TRANSFER = 4;
			TRANSMIT = 5;
			WAIT = 6;
		}
		required Type type = 1;
		required uint32 cost = 2;
		optional uint32 range = 3;
	}
}
message Point {
	required int32 x = 1;
	required int32 y = 2;
}
message Dimension {
	required uint32 width = 1;
	required uint32 height = 2;
}
